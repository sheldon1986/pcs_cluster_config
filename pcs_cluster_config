#!/bin/bash

while getopts "i:m:g:p:c:n:s:" opt
do
	case $opt in
		i)
			ClusterVIP=$OPTARG
			if [[ -z $ClusterVIP ]]
			then
				print_help
				echo "==================="
				echo "| Must Define VIP | "
				echo "==================="
				exit 1;
			fi
			;;
		m)
			ClusterVIPNetmask=$OPTARG
                        if [[  -z $ClusterVIPNetmask ]]
                        then
				print_help
				echo "==========================="
				echo "| Must Define VIP Netmask | "
				echo "==========================="
				exit 1;
                        fi
			;;
		g)
			GaleraClusterID=$OPTARG
			;;
		p)
			GaleraClusterPassword=$OPTARG
			;;
		c)
			ClusterNodeList=$OPTARG
                        if [[  -z $ClusterNodeList ]]
                        then
				print_help
				echo "===================================="
				echo "| Must Define Cluster Network list |"
				echo "===================================="
				exit 1;
                        fi
			;;
		n)
                        ClusterName=$OPTARG
                        ;;
		s)
			HAproxyServerList=$OPTARG
                        if [[  -z $HAproxyServerList ]]
                        then
				print_help
				echo "===================================="
				echo "| Must Define Service Network list |"
				echo "===================================="
			fi
			;;
        esac
done
shift $(( $OPTIND  -1 ))
Option=$1
if [[ -z $GaleraClusterID ]]
then
	GaleraClusterID=clustercheck
fi
echo "Galera Cluster Monitoring ID is" $GaleraClusterID

if [[ -z $GaleraClusterPassword ]]
then
	GaleraClusterPassword=password
fi
echo "Galera Cluster Monitoring password is" $GaleraClusterPassword

if [[ -z $ClusterName ]]
then
	ClusterName=PCS_Cluster
fi

function print_help ()
{
	echo $0 " [options] [Command]"
	echo "Setup and configure MariaDB with GaleraCluster and HAproxy Pacemaker "
	echo ""
	echo "[options]"
	echo "  -i vip =Must Define="
	echo "  -m VIP Netmask =Must Define="
	echo "  -g Galera Cluster Monitoring ID. Default is clustercheck "
	echo "  -p Galera Cluster Monitoring IDs password. Default is password "
	echo "  -c Pacemaker Cluster node list. let me know cluster network eg) 192.200.10.16,192.200.10.17,192.200.10.18 =Must Define="
	echo "  -n Pacemaker Cluster Name. Default is PCS_Cluster "
	echo "  -s Haproxy Service Network list. let me know Service Newtork eg) 172.16.10.11,172.16.10.12,172.16.10.13 =Must Define="
	echo ""
	echo "[Command] "
	echo "config 	only configure haproxy and galera"
	echo "pcs 	only configure pcs"
	echo "all 	configure haproxy and galera with pcs"
	echo ""
	echo ""
	echo " usage example)"
	echo " pcs_cluster_config -i 10.0.0.1 -m 24 -g clustercheck -p password -c 192.200.10.16,192.200.10.17,192.200.10.18 -n PCS_Cluster -s 172.16.10.11,172.16.10.12,172.16.10.13 config"
	echo " pcs_cluster_config -i 10.0.0.1 -m 24 -g clustercheck -p password -c 192.200.10.16,192.200.10.17,192.200.10.18 -n PCS_Cluster -s 172.16.10.11,172.16.10.12,172.16.10.13 pcs"

}

function pre_setup  ()
{
	# configure host file
	Server_Count=1
	for i in $(echo $ClusterNodeList | sed -e 's/,/ /g')
	do
		echo $i" node"$Server_Count >> /etc/hosts
		if [ $( ip a | grep $i | wc -l) -eq 1 ]
		then
			ThisServerIP=$i
			ThisServerName=node$Server_Count
		fi
		let Server_Count=$Server_Count+1
	done
	# iptable check
	iptables -F
	systemctl stop firewalld
	systemctl disable firewalld
	#selinux check
	setenforce 0
	echo $ThisServerIP $ThisServerName

}

function pcs_setup ()
{
	pcs cluster auth node1 node2 node3
	pcs cluster setup --name $ClusterName node1 node2 node3
	pcs cluster start --all
	pcs property set stonith-enabled=false
	pcs property set no-quorum-policy=ignore
	pcs resource create CVIP ocf:heartbeat:IPaddr2 ip=$ClusterVIP cidr_netmask=$ClusterVIPNetmask op monitor interval=30s
	pcs resource create galera ocf:heartbeat:galera check_user=$GaleraClusterID check_passwd=$GaleraClusterPassword socket="/var/lib/mysql/mysql.sock"  config="/etc/my.cnf" pid="/var/lib/mysql/mysqld.pid"  wsrep_cluster_address="gcomm://node1,node2,node3"  op monitor  timeout="30" interval="20" op monitor role="Master" timeout="30" interval="10" op monitor role="Slave" timeout="30" interval="30"  meta master-max=3 --master
	pcs resource create HAproxy systemd:haproxy op monitor interval=2s
	pcs constraint colocation add HAproxy CVIP INFINITY
	pcs constraint order CVIP then HAproxy
}


function haproxy_setup ()
{
	echo "listen admin" >> /etc/haproxy/haproxy.cfg
	echo "    bind *:8443" >> /etc/haproxy/haproxy.cfg
	echo "    stats enable" >> /etc/haproxy/haproxy.cfg
	echo "" >> /etc/haproxy/haproxy.cfg
	echo "listen db-vms-galera" >> /etc/haproxy/haproxy.cfg
	echo "   bind 0.0.0.0:3306" >> /etc/haproxy/haproxy.cfg
	echo "   balance source" >> /etc/haproxy/haproxy.cfg
	echo "   mode tcp" >> /etc/haproxy/haproxy.cfg
	echo "   option tcpka" >> /etc/haproxy/haproxy.cfg
	echo "   stick-table type ip size 2 " >> /etc/haproxy/haproxy.cfg
	echo "   stick on dst " >> /etc/haproxy/haproxy.cfg
	echo "   timeout server 90s" >> /etc/haproxy/haproxy.cfg
	echo "   timeout client 90s" >> /etc/haproxy/haproxy.cfg
	Service_server_count=1
	for i in $(echo $HAproxyServerList | sed -e 's/,/ /g')
	do
		echo "   server proxy$Service_server_count $i:13306 check inter 1s" >> /etc/haproxy/haproxy.cfg
		let Service_server_count=$Service_server_count+1
	done
}

function galera_setup ()
{
	echo $GaleraClusterID $GaleraClusterPassword
	mysql -u root -e "GRANT PROCESS ON *.* TO '$GaleraClusterID'@'localhost' IDENTIFIED BY '$GaleraClusterPassword';"
	mysql -u $GaleraClusterID -p$GaleraClusterPassword -e "status;"
	if [ $(mysql -u root -e "select * from mysql.user" | grep $GaleraClusterID | wc -l) -eq 1 ]
	then
		mysql -u root -e "select * from mysql.user" | grep $GaleraClusterID | awk '{print "Account add to "$2}'
	else
		echo "something wrong. check mysql account "$GaleraClusterID
	fi
	sed -ie '/wsrep_node_address/d' /etc/my.cnf.d/galera.cnf
	sed -ie '/wsrep_node_name/d' /etc/my.cnf.d/galera.cnf
	sed -ie '/wsrep_cluster_address/d' /etc/my.cnf.d/galera.cnf
	echo "wsrep_node_address='"$ThisServerIP"'" >> /etc/my.cnf.d/galera.cnf
	echo "wsrep_node_name='"$ThisServerName"'" >> /etc/my.cnf.d/galera.cnf
	echo "wsrep_cluster_address='gcomm://node1,node2,node3'" >> /etc/my.cnf.d/galera.cnf
}

case $Option in
	config)
		echo "pre config and setup galera and haproxy"
		pre_setup
		haproxy_setup
		galera_setup
		echo "all done"
	;;
	pcs)
		echo "pcs config and setup"
		pcs_setup
		echo "all done"
	;;
	all)
		echo "pre config and setup all"
		pre_setup
		haproxy_setup
		galera_setup
		pcs_setup
		echo "all done"
	;;
	*)
		print_help
		exit 0;
	;;
esac
